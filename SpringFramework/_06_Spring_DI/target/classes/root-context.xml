<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- RootContext.xml 파일을 읽어서 스프링컨테이너 구동 시 
		 bean 태그로 된 클래스의 객체 자동 생성 
		 bean 객체: bean 태그로 등록된 클래스의 객체
		 bean 객체로 등록하는 클래스들은 라이브러리들의 객체를 생성할 때 등록
		 라이브러리들에는 개발자가 어노테이션으로 객체생성이 불가능하기 때문-->
	<!-- IOC(제어의 역전): 개발자가 직접 생성하던 객체를 스프링 설정 파일을 통해 스프링에 위임함 -->
	<!-- init-method: 자동 객체 생성 시 초기화 필요한 객체들은 초기화 메소드를 만들어서 매핑 -->
	<!-- destroy-method: 스프링 컨테이너에 의해 객체가 삭제되기 전에 수행할 동작을 작성한
						 메소드 매핑 -->
	<!-- lazy-init: 객체의 생성 시점을 설정. true 설정 시 객체 요청 시에 객체 생성 -->
	<!-- scope: 객체의 생성 방식을 지정. singleton, prototype 지정가능.
	            생성된 하나의 객체를 공유할 것인지 요청때마다 객체를 새로 생성할 것인지 결정 -->
	<bean id="kCar" class="com.bit.springboard.coupling.KiaCar"
	init-method="initMethod" destroy-method="destroyMethod"
	scope="prototype"></bean>
	<bean id="hCar" class="com.bit.springboard.coupling.HyundaiCar"
	init-method="initMethod" destroy-method="destroyMethod" 
	lazy-init="true"></bean>
</beans>
